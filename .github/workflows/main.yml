name: CI

on: 
   repository_dispatch:
    types: [my-event]

   workflow_dispatch:

jobs:
  build:

    runs-on: windows-2019

    steps:
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        event-type: my-event
    - name: Download
      run: |
        C:
        mkdir uupwork
        cd uupwork
        Invoke-WebRequest https://raw.githubusercontent.com/xyxloop/updumpbuildrt/main/uupdump_cli.py -OutFile uupdump_cli.py
        pip3 install py7zr requests
        python3 uupdump_cli.py Dev arm64 PROFESSIONAL
        dir
        cd 2*
        .\uup_download_windows.cmd
    - name: Upload
      uses: actions/upload-artifact@master
      with:
        name: uupiso
        path: C:\uupwork\2*\*.iso
        if-no-files-found: error
    - name: Upload to AliyunDrive
      run: |
        Invoke-WebRequest https://github.com/tickstep/aliyunpan/releases/download/v0.1.2/aliyunpan-v0.1.2-windows-x64.zip -OutFile aliyunpan.zip 
        Expand-Archive aliyunpan.zip
        cd aliyunpan\aliyunpan-v0.1.2-windows-x64
        mkdir ISO
        Copy-Item C:\uupwork\2*\*.iso .\ISO
        dir
        .\aliyunpan.exe login -RefreshToken=${{ secrets.RTOKEN }} && .\aliyunpan.exe upload .\ISO /Windows
    - name: Create file status_job1.txt and write the job status into it
      if: always()
      run: echo ${{ job.status }} > status_job1.txt
    - name: Upload file status_job1.txt as an artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
         name: pass_status_job1
         path: status_job1.txt
         
  job2:
     runs-on: ubuntu-latest
     needs: [build]
     if: always()
     steps:
      - name: Download artifact pass_status_job1
        uses: actions/download-artifact@v1
        with:
          name: pass_status_job1
      - name: Set the status of Job 1, as output parameter
        id: set_outputs
        run: echo "::set-output name=status_job1::$(<pass_status_job1/status_job1.txt)"
      - name: Show the values of the output
        run: |
          # using the syntax steps.<step_id>.outputs.<output_name> to access the output parameter
          echo "status_job1 = ${{ steps.set_outputs.outputs.status_job1 }}"
          # other steps or commands to perform an operation according to its value.
